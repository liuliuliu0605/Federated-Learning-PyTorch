
# model:1e3
# link=node=1e6
# reset!
# pfl(ring):0.369319 s
# reset!
# pfl(2d_torus):0.399409 s
# reset!
# pfl(complete):20.193770 s
# reset
# ring allreduce:52.755200 s


from matplotlib import pyplot as plt
from collections import OrderedDict

topo = ['ring', '2d-torus', 'complete']
topo = ['ring', 'complete']
allreduce = ['ring-based allreduce']

colors = ['b', 'r', 'k', 'g', 'y', 'c', 'm']
line_style = ['-', '--', '-.', ':']


#model_size = 1e3
time = OrderedDict({
    'ps=9': {
        '1e6': [0.21084, 0.28217099999999995, 0.32909299999999997, 2.346704],
        '5e6': [0.1433154, 0.18117219999999998, 0.20347020000000005, 2.1109792],
        '1e7': [0.1357842, 0.1702854, 0.18990060000000003, 2.0815136],
        '5e7': [0.12975924, 0.16265148000000001, 0.17909404, 2.0579411199999997],
        '1e8': [0.12900612, 0.16169724000000002, 0.17812651999999995, 2.05499456],
        '5e8': [0.128403624, 0.160933848, 0.17735250400000002, 2.052637312],
        '1e9': [0.128328312, 0.16083842399999998, 0.17725575200000004, 2.052342656]
    },
    'ps=16': {
        '1e6': [0.194573, 0.35354399999999997, 0.4229590000000001, 3.7971899999999996],
        '5e6': [0.1264642, 0.2103454, 0.21651480000000006, 3.385926],
        '1e7': [0.1179506, 0.1911388, 0.19375839999999994, 3.334518],
        '5e7': [0.11113972, 0.18068588000000002, 0.18076011999999997, 3.2933916],
        '1e8': [0.11028836, 0.17954044, 0.17957756000000002, 3.2882508],
        '5e8': [0.109607272, 0.178624088, 0.178631512, 3.28413816],
        '1e9': [0.109522136, 0.17850954400000002, 0.178513256, 3.28362408]
    },
    'ps=25': {
        '1e6': [0.206931, 0.368204, 0.7854240000000001, 5.838623999999999],
        '5e6': [0.1229212, 0.22260380000000002, 0.24017499999999997, 5.3059392],
        '1e7': [0.1153436, 0.2102134, 0.21192460000000002, 5.239353599999999],
        '5e7': [0.10928152, 0.20030108, 0.20145335999999997, 5.1860851199999995],
        '1e8': [0.10852376, 0.19906204000000002, 0.19932967999999995, 5.1794265600000005],
        '5e8': [0.107917552, 0.19807080800000001, 0.19808392800000002, 5.174099712],
        '1e9': [0.107841776, 0.19794690399999998, 0.19795346399999997, 5.173433856]
    },
    'ps=36': {
        '1e6': [0.239681, 0.4001969999999999, 1.603805, 14.143078],
        '5e6': [0.2015242, 0.2615172, 0.39731580000000005, 13.555490800000001],
        '1e7': [0.1967546, 0.2539418, 0.33184139999999995, 13.497133999999999],
        '5e7': [0.19293892, 0.24780552, 0.3218626, 13.4505868],
        '1e8': [0.19246196, 0.24704376, 0.3213578, 13.444768400000001],
        '5e8': [0.192080392, 0.24643435200000002, 0.32095396, 13.44011368],
        '1e9': [0.192032696, 0.24635817599999998, 0.32090347999999996, 13.43953184]
    },
    'ps=49': {
        '1e6': [0.22555, 0.38495499999999994, 3.6327309999999997, 17.302252],
        '5e6': [0.1809202, 0.33048500000000003, 0.4870694, 16.7573184],
        '1e7': [0.1770866, 0.325669, 0.3664832, 16.6948896],
        '5e7': [0.17401972, 0.3218162, 0.32303616, 16.64479104],
        '1e8': [0.17363636, 0.3213346, 0.32252208, 16.638539520000002],
        '5e8': [0.173329672, 0.32094932, 0.3221108160000001, 16.633538303999998],
        '1e9': [0.173291336, 0.32090116, 0.32205940800000005, 16.632913151999997]
    },
    'ps=64': {
        '1e6': [0.213069, 0.38189900000000004, 6.946697, 22.965935],
        '5e6': [0.1827714, 0.3304849999999999, 0.8699064000000001, 22.2348924],
        '1e7': [0.1789842, 0.325669, 0.4987407999999999, 22.1548572],
        '5e7': [0.17595444, 0.3218162, 0.32319228000000005, 22.09082904],
        '1e8': [0.17557572, 0.3213346, 0.32254063999999993, 22.08282552],
        '5e8': [0.175272744, 0.32094932, 0.32211452799999996, 22.076422704],
        '1e9': [0.175234872, 0.32090116, 0.322061264, 22.075622352]
    },
    'ps=81': {
        '1e6': [0.369319, 0.39940899999999996, 20.193770001, 52.7552],
        '5e6': [0.3314544, 0.33334579999999997, 1.2917348, 51.768063999999995],
        '1e7': [0.3267312, 0.326549, 0.7250452000000001, 51.644672],
        '5e7': [0.32295264, 0.32199219999999995, 0.32310112, 51.545975680000005],
        '1e8': [0.32248032, 0.32142260000000006, 0.3226188, 51.533627839999994],
        '5e8': [0.322102464, 0.32096692000000004, 0.32211731199999993, 51.523749568],
        '1e9': [0.322055232, 0.32090996, 0.32206265599999995, 51.522514784]
    }
})


nrows = 1
ncols = 1
# fig, ax = plt.subplots(nrows=nrows, ncols=ncols,  figsize=(20,10))
fig, ax = plt.subplots(nrows=nrows, ncols=ncols,  figsize=(10,8))

legends = topo + allreduce
ps_num_list = [9, 16, 25, 36, 49, 64]


ps_num_list = [40]
time['ps=86'] =\
{'1000.0': [17.310186, 2437.786589, 2245.706356171],
 '100000.0': [0.30324, 45.443148, 24.082516170999952],
 '10000000.0': [0.1807496, 0.3554377999999998, 1.8914993709999992],
 '1000000000.0': [0.179591696, 0.3220245840000002, 1.6646476029999997]}

time['ps=40'] = {'10000.0': [246.05488, 2247.7905029999997, 307.6756800000285], '100000.0': [18.810776, 590.6362803750001, 49.09585199999583], '1000000.0': [0.874718, 104.624068, 12.605736000001514], '10000000.0': [0.2461988, 7.975952800000001, 10.430097599999847], '100000000.0': [0.22000992, 1.5806437600000005, 10.212533759999985], '1000000000.0': [0.217930992, 0.4901624880000002, 10.190777375999971], '10000000000.0': [0.217723083, 0.48982461099999997, 10.188601409999984]}



for k, ps_num in enumerate(ps_num_list):
    xs = [float(x) / 1e6 for x in time['ps=%d' % ps_num].keys()]
    yy = time['ps=%d'%ps_num]
    ys_list = [[] for _ in range(len(legends))]
    for x in yy:
        for i, y in enumerate(yy[x]):
            # ys_list[i].append(y / yy[x][0])
            ys_list[i].append(y)

    ax = plt.subplot(nrows, ncols, k + 1)
    plt.grid()
    for i, ys in enumerate(ys_list):
        color_n_line = colors[i] + line_style[i]
        plt.plot(xs, ys, color_n_line, label=legends[i], linewidth=2)
        plt.xlabel("Network Capacity (Mbps)", fontsize=20)
        plt.ylabel("Normalized Comm. Time", fontsize=20)
        plt.tick_params(labelsize=20)
        plt.xscale('log')
        plt.legend(fontsize=20)
        plt.title("Number of PSes: %d" % ps_num, fontsize=20)
        plt.yscale('log')
plt.show()


fig, ax = plt.subplots(figsize=(10,8))






